import { findBrackets, doBrackets } from "./doBrackets";

test("findBrackets(['(', 10 , '+','(', 2, '*', 3,')', '-', 10,')', '+', 2, '/', 5] )", () => {
  expect(
    findBrackets([
      "(",
      10,
      "+",
      "(",
      2,
      "*",
      3,
      ")",
      "-",
      10,
      ")",
      "+",
      2,
      "/",
      5,
    ])
  ).toEqual([0, 10, 3, 7]);
});

test("findBrackets('1 / *'[10 , '+', 2, '*', '(', 3, '-', 10, ')', '+', 2, '/', 5]; )", () => {
  expect(
    findBrackets([10, "+", 2, "*", "(", 3, "-", 10, ")", "+", 2, "/", 5])
  ).toEqual([4, 8]);
});

it("findBrackets(['(', 2, '*', '(', 2, '*', 2, ')', '/', 3, ')'])", () => {
  expect(
    findBrackets(["(", 2, "*", "(", 2, "*", 2, ")", "/", 3, ")"])
  ).toEqual([0, 10, 3, 7]);
});

test("findBrackets([1, '+', 3])", () => {
  expect(findBrackets([1, "+", 3])).toEqual([]);
});

//doBrackets
test("doBrackets([0,10,3,7]),['(', 2, '*', '(', 2, '*', 2, ')', '/', 3, ')'])", () => {
  expect(
    doBrackets(["(", 2, "*", "(", 2, "*", 2, ")", "/", 3, ")"], [0, 10, 3, 7])
  ).toEqual([2.67]);
});

it("doBrackets([10 , '+', 2, '*', '(', 3, '-', 10, ')', '+', 2, '/', 5], [4,8])", () => {
  expect(
    doBrackets([10, "+", 2, "*", "(", 3, "-", 10, ")", "+", 2, "/", 5], [4, 8])
  ).toEqual([10, "+", 2, "*", -7, "+", 2, "/", 5]);
});
